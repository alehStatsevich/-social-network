[{"D:\\react\\02proect\\src\\index.tsx":"1","D:\\react\\02proect\\src\\reportWebVitals.ts":"2","D:\\react\\02proect\\src\\App.tsx":"3","D:\\react\\02proect\\src\\components\\Header\\Header.tsx":"4","D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx":"5","D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx":"10","D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"11","D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx":"12","D:\\react\\02proect\\src\\redux\\state.tsx":"13","D:\\react\\02proect\\src\\redux\\profile-reduser.ts":"14","D:\\react\\02proect\\src\\redux\\dialogs-reduser.tsx":"15","D:\\react\\02proect\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"17","D:\\react\\02proect\\src\\StoreContext.tsx":"18","D:\\react\\02proect\\src\\redux\\redux-store.tsx":"19","D:\\react\\02proect\\src\\redux\\users-reduser.ts":"20","D:\\react\\02proect\\src\\components\\Users\\UsersContainer.tsx":"21","D:\\react\\02proect\\src\\components\\Users\\Users.tsx":"22","D:\\react\\02proect\\src\\components\\Profile\\ProfileContainer.tsx":"23","D:\\react\\02proect\\src\\components\\Header\\HeaderContainer.tsx":"24","D:\\react\\02proect\\src\\components\\Preloader.tsx":"25","D:\\react\\02proect\\src\\redux\\auth-reduser.ts":"26","D:\\react\\02proect\\src\\components\\Login\\Login.tsx":"27","D:\\react\\02proect\\src\\api\\api.ts":"28","D:\\react\\02proect\\src\\hoc\\withAuthRedirect.tsx":"29","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx":"30","D:\\react\\02proect\\src\\components\\common\\FormsControls\\FormsControls.tsx":"31","D:\\react\\02proect\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"32","D:\\react\\02proect\\src\\redux\\app-reduser.ts":"33","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.tsx":"34","D:\\react\\02proect\\src\\components\\Users\\Paginator.tsx":"35","D:\\react\\02proect\\src\\components\\Users\\User.tsx":"36"},{"size":570,"mtime":1625235555413,"results":"37","hashOfConfig":"38"},{"size":440,"mtime":1616097707646,"results":"39","hashOfConfig":"38"},{"size":2455,"mtime":1625071467041,"results":"40","hashOfConfig":"38"},{"size":7627,"mtime":1623231488553,"results":"41","hashOfConfig":"38"},{"size":763,"mtime":1625130811351,"results":"42","hashOfConfig":"38"},{"size":854,"mtime":1616097707633,"results":"43","hashOfConfig":"38"},{"size":2236,"mtime":1623156220335,"results":"44","hashOfConfig":"38"},{"size":428,"mtime":1616097707637,"results":"45","hashOfConfig":"38"},{"size":1620,"mtime":1623157696052,"results":"46","hashOfConfig":"38"},{"size":798,"mtime":1625416150427,"results":"47","hashOfConfig":"38"},{"size":450,"mtime":1616097707628,"results":"48","hashOfConfig":"38"},{"size":266,"mtime":1613671414551,"results":"49","hashOfConfig":"38"},{"size":4701,"mtime":1614860906405,"results":"50","hashOfConfig":"51"},{"size":2990,"mtime":1625233875795,"results":"52","hashOfConfig":"38"},{"size":2540,"mtime":1623092303376,"results":"53","hashOfConfig":"38"},{"size":2446,"mtime":1623092303353,"results":"54","hashOfConfig":"38"},{"size":3110,"mtime":1615476207987,"results":"55","hashOfConfig":"38"},{"size":337,"mtime":1614940946770,"results":"56","hashOfConfig":"51"},{"size":1374,"mtime":1625073226608,"results":"57","hashOfConfig":"38"},{"size":5725,"mtime":1625417552745,"results":"58","hashOfConfig":"38"},{"size":2597,"mtime":1627376777674,"results":"59","hashOfConfig":"38"},{"size":1158,"mtime":1625505251734,"results":"60","hashOfConfig":"38"},{"size":1978,"mtime":1627376795946,"results":"61","hashOfConfig":"38"},{"size":1053,"mtime":1625129195964,"results":"62","hashOfConfig":"38"},{"size":1300,"mtime":1625391875552,"results":"63","hashOfConfig":"38"},{"size":2237,"mtime":1625233537865,"results":"64","hashOfConfig":"38"},{"size":2063,"mtime":1627241302517,"results":"65","hashOfConfig":"38"},{"size":1474,"mtime":1624534360320,"results":"66","hashOfConfig":"38"},{"size":946,"mtime":1625083524567,"results":"67","hashOfConfig":"38"},{"size":1199,"mtime":1623060185939,"results":"68","hashOfConfig":"38"},{"size":806,"mtime":1623167142672,"results":"69","hashOfConfig":"38"},{"size":705,"mtime":1623158008345,"results":"70","hashOfConfig":"38"},{"size":1932,"mtime":1623267714731,"results":"71","hashOfConfig":"38"},{"size":1094,"mtime":1625139182612,"results":"72","hashOfConfig":"38"},{"size":1672,"mtime":1625507911672,"results":"73","hashOfConfig":"38"},{"size":1779,"mtime":1625416385955,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"ay6f91",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1hmcuqe",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"151"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\02proect\\src\\index.tsx",[],["163","164"],"D:\\react\\02proect\\src\\reportWebVitals.ts",[],"D:\\react\\02proect\\src\\App.tsx",["165","166"],"D:\\react\\02proect\\src\\components\\Header\\Header.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx",[],"D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx",["167","168","169"],"import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport  {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n        <a>Music</a>\r\n    </div>\r\n        <div className={s.item}>\r\n            <a>Setting</a>\r\n        </div>\r\n    </nav>\r\n\r\n}\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["170","171"],"D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["172"],"D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx",["173","174","175","176"],"import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType, DialogType, MessageType, StoreType} from \"../../redux/state\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\n\r\ntype DialogsPropsType ={\r\n      dialogsPage : DialogsPageType\r\n    sendMessage: (newMessageBody:any)=>void\r\n    updateNewMessageBody: (body: string) => void\r\n    isAuth: any\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements =  state.dialogs.map( d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    // let onSendMessageClick = ( values:any) => {\r\n    //     props.sendMessage(values.newMessageBody);\r\n    //     // props.store.dispatch(sendMessageCreator())\r\n    // }\r\n    let addNewMessage = (values:any) => {\r\n       props.sendMessage(values.newMessageBody)\r\n    }\r\n    //перенапровление Redirect\r\n    if (props.isAuth === false) return <Redirect to={\"/login\"}/>\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogsItem}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n\r\n           <div> {messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["177","178"],"D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx",[],["179","180"],"D:\\react\\02proect\\src\\redux\\state.tsx",[],["181","182"],"D:\\react\\02proect\\src\\redux\\profile-reduser.ts",[],"D:\\react\\02proect\\src\\redux\\dialogs-reduser.tsx",["183"],"import {DialogType, MessageType, StateType} from \"./state\";\r\n// export const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\r\n export const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\n type dialogsPageType  = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n   // newMessageBody: string\r\n }\r\n let initialState :dialogsPageType = {\r\n    messages: [\r\n       {id: 1, message: 'Hi'},\r\n       {id: 2, message: 'How is your'},\r\n       {id: 3, message: 'Yo'},\r\n       {id: 4, message: 'Yo'},\r\n       {id: 5, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n       {id: 1, name: 'Dima'},\r\n       {id: 2, name: 'Andrey'},\r\n       {id: 3, name: 'Sveta'},\r\n       {id: 4, name: 'Sasha'},\r\n       {id: 5, name: 'Viktor'},\r\n       {id: 6, name: 'Valera'}\r\n    ],\r\n   // newMessageBody: ''\r\n }\r\n\r\nexport  const dialogsReducer = (state= initialState, action: any): dialogsPageType => {\r\n\r\n\r\n\r\n   switch (action.type) {\r\n      // case UPDATE_NEW_MESSAGE_BODY:\r\n      //    let stateCopy = {...state}\r\n      //    //поверхносная копия\r\n      //    stateCopy.newMessageBody = action.body;\r\n      //    //ретурним копи стэйт.если вернем стейт это будет тот что приходит в функцию и не будет перерисовки\r\n      //    return stateCopy;\r\n      case SEND_MESSAGE: {\r\n         let body = action.newMessageBody;\r\n         let stateCopy2 = {\r\n            ...state,\r\n           // newMessageBody: '',\r\n            messages: [...state.messages,{id: 6, message: body}]}\r\n        //копируем месаджи и  пушим messages.push({id: 6, message: body}\r\n\r\n\r\n         return stateCopy2;\r\n     ///???????\r\n      }\r\n      default:\r\n         return state;//????????????\r\n   }\r\n}\r\nexport const sendMessageCreator = (newMessageBody:any) => {\r\n   return{type: 'SEND-MESSAGE',newMessageBody} as const\r\n}\r\nexport default dialogsReducer;\r\n\r\n// export const updateNewMessageBodyCreator = (body: string) => {\r\n//    return {type: 'UPDATE-NEW-MESSAGE-BODY', body: body} as const\r\n// }\r\n//  if(action.type === 'UPDATE-NEW-MESSAGE-BODY'){\r\n//       state.dialogsPage.newMessageBody = action.body;\r\n//\r\n//    }else if(action.type === 'SEND-MESSAGE'){\r\n//       let body = state.dialogsPage.newMessageBody;\r\n//       state.dialogsPage.newMessageBody = '';\r\n//       state.dialogsPage.messages.push({id: 6, message: body})\r\n//    }\r\n//\r\n//    return state;\r\n// }переделали в switch\r\n// stateCopy2.messages.push({id: 6, message: body});\r\n// export default dialogsReducer;","D:\\react\\02proect\\src\\components\\Dialogs\\DialogsContainer.tsx",["184"],"import React, {ComponentType} from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {StateType} from \"../../redux/state\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        // updateNewMessageBody: (body: string) => {\r\n        //     dispatch(updateNewMessageBodyCreator(body))\r\n        // },\r\n        sendMessage: (newMessageBody:any) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n//hoc\r\n// let AuthRedirectComponent = WithAuthRedirect(Dialogs)\r\n// let AuthRedirectComponent = (props:any) =>{\r\n//     //перенапровление Redirect\r\n//     if (props.isAuth === false) return <Redirect to=\"/Login\"/>\r\n//     return <Dialogs {...props}/>\r\n// }\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n// type DialogsPropsType ={\r\n//    store:  StoreType\r\n// }\r\n\r\n// const DialogsContainer = (props:DialogsPropsType ) => {\r\n//\r\n//     return <StoreContext.Consumer>\r\n//         {(store) => {\r\n//             let state = store.getState().dialogsPage;\r\n//\r\n//             // let dialogsElements =  state.dialogs.map( d => <DialogItem name={d.name} id={d.id}/>);\r\n//             // let messagesElements = state.messages.map((m) => <Message message={m.message}/>);\r\n//             // let newMessageBody = state.newMessageBody;\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator())\r\n//             }\r\n//             let onNewMessageChange = (body: string) => {\r\n//                 // let body = event.target.value\r\n//                 store.dispatch(updateNewMessageBodyCreator(body))\r\n//             }\r\n//\r\n//             // @ts-ignore\r\n//             return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                             sendMessage={onSendMessageClick}\r\n//                             dialogsPage={state}/>\r\n//         }}\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["185"],"import React from \"react\";\r\n\r\nimport {addPostActionCreator, updateNewTextActionCreator} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport  {StateType} from \"../../../redux/state\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state: StateType ) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst  mapDispatchToProps = (dispatch:  Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            let action = updateNewTextActionCreator(text)\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n//\r\n// posts: PostType[]\r\n// changeText: (newPostText: string )=> void\r\n//     message: PostType[]\r\n// likesCount: PostType[]\r\n//  addPost: (text: newPostText) => void\r\n//    newPostText: string\r\n// export type MyPostsPropsType = {\r\n//     store:  StoreType\r\n//     dispatch: (action: ActionsType)=> void\r\n//     updateNewPostText:  (text: string) => void\r\n//     newPost: string\r\n// }\r\n//\r\n// const MyPostsContainer = (props: MyPostsPropsType) => {\r\n//     // let postsElements =\r\n//     //     props.store._state.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n//     // //ссылка ссьлающаяся на  элемент в textarea\r\n//     // //  let newPostElement = React.createRef();\r\n//     // let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n//     //переносим в  <StoreContext.Consumer>\r\n// //let state = props.store.getState()\r\n// //     let addPost = () => {\r\n// //         // let text = newPostElement.current.value;\r\n// //         props.store.dispatch(addPostActionCreator())\r\n// //     }\r\n// //     let changeTextarea = (text: string) => {\r\n// //         // if (newPostElement.current) {\r\n// //         //     let text = newPostElement.current.value;\r\n// //             let action = updateNewTextActionCreator(text)\r\n// //             props.store.dispatch(action)\r\n// //     }\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().profilePage\r\n//\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator())\r\n//                 }\r\n//                 let changeTextarea = (text: string) => {\r\n//                     let action = updateNewTextActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//\r\n//                 return <MyPosts updateNewPostText= {changeTextarea}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>}\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\StoreContext.tsx",["186"],"D:\\react\\02proect\\src\\redux\\redux-store.tsx",[],"D:\\react\\02proect\\src\\redux\\users-reduser.ts",[],["187","188"],"D:\\react\\02proect\\src\\components\\Users\\UsersContainer.tsx",["189","190"],"D:\\react\\02proect\\src\\components\\Users\\Users.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\react\\02proect\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\react\\02proect\\src\\components\\Preloader.tsx",[],"D:\\react\\02proect\\src\\redux\\auth-reduser.ts",[],["191","192"],"D:\\react\\02proect\\src\\components\\Login\\Login.tsx",[],"D:\\react\\02proect\\src\\api\\api.ts",[],"D:\\react\\02proect\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx",["193"],"import React from \"react\";\r\nimport s from './Profileinfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component <any> {\r\nstate={\r\n    editMode: false,\r\n    status: this.props.status\r\n}\r\n//setState асинхронный\r\nactivateEditMode=()=>{\r\n    this.setState({editMode: true})\r\n}\r\ndeactivateEditMode =() =>{\r\n    this.setState({editMode: false});\r\n    this.props.updateStatus(this.state.status);\r\n}\r\n    onStatusChange= (e:any) =>{\r\n    this.setState({\r\n        status: e.currentTarget.value\r\n    })\r\n}\r\ncomponentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>, snapshot?: any) {\r\n    if (prevProps.status !== this.props.status){\r\n        this.setState({\r\n            status:this.props.status\r\n        })\r\n    }\r\n}\r\n\r\n    render() {\r\n    return <div>\r\n        {!this.state.editMode &&\r\n        <div>\r\n            <span onDoubleClick={this.activateEditMode}>{!this.props.status || \"----\"}</span>\r\n        </div>\r\n        }\r\n        {this.state.editMode &&\r\n        <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n}\r\nexport default ProfileStatus;\r\n",["194","195"],"D:\\react\\02proect\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],["196","197"],"D:\\react\\02proect\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"D:\\react\\02proect\\src\\redux\\app-reduser.ts",["198","199","200"],"import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reduser\";\r\n\r\n\r\nexport const SET_INITIALIZED= 'SET_INITIALIZED';\r\n\r\n\r\n\r\n\r\n type DataType = {\r\n   //  id: number | null\r\n   //  email: string | null\r\n   //  login:string | null\r\n   //  auth?:any\r\n   // isAuth: boolean\r\n   //  userId?: number\r\n    initialized: boolean\r\n\r\n}\r\ntype AuthActionType = SetUserDataACType\r\ntype SetUserDataACType = {\r\n    type: typeof SET_INITIALIZED,\r\n    userId: number\r\n    email: string\r\n    login: string\r\n};\r\n\r\n\r\n\r\nlet initialState : DataType = {\r\n    initialized: false\r\n}\r\n\r\n export const appReducer = (state:DataType = initialState , action: AuthActionType):DataType => {\r\n    switch (action.type) {\r\n      case SET_INITIALIZED:\r\n         return {\r\n           ...state,\r\n             initialized: true\r\n         }\r\n        default:\r\n          return state;\r\n    }\r\n }\r\nexport const  initialized = () => {\r\n    return{type: 'SET_INITIALIZED'} as const\r\n}\r\n//санкрейтор\r\nexport const initializeApp=()=>(dispatch: any)=>{\r\n let  promise=(getAuthUserData());\r\n Promise.all([promise])\r\n     .then(()=>{dispatch( initialized())})\r\n\r\n\r\n}\r\n\r\n\r\n export default appReducer;\r\n// {id: 1,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSujODEKwrdvmj6jufsQRsId0hv3Wr6vfppsA&usqp=CAU',\r\n//     followed:false, fullName: \"Dima\", status: \"Hello\",location:{city:\"Minsk\", country: \"Belarus\"}},\r\n// {id: 2,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNBR5SL43JjDN9N0r_q0FLWhi1WSTq1nDi_Q&usqp=CAU',\r\n//     followed:false, fullName: \"Eska\", status: \"Hello\",location:{city:\"Brest\", country: \"Belarus\"}},\r\n// {id: 3,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSI3DxknKrLBlFGLEtUQmCbc0adqoOYc0VLYQ&usqp=CAU',\r\n//     followed:true,fullName: \"Leonid\", status: \"Hello\",location:{city:\"Lida\", country: \"Belarus\"}}","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.tsx",[],"D:\\react\\02proect\\src\\components\\Users\\Paginator.tsx",[],"D:\\react\\02proect\\src\\components\\Users\\User.tsx",["201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":8,"column":26,"nodeType":"208","messageId":"209","endLine":8,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":16,"column":8,"nodeType":"208","messageId":"212","endLine":16,"endColumn":13},{"ruleId":"213","severity":1,"message":"214","line":17,"column":13,"nodeType":"215","endLine":17,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":20,"column":9,"nodeType":"215","endLine":20,"endColumn":12},{"ruleId":"213","severity":1,"message":"214","line":23,"column":13,"nodeType":"215","endLine":23,"endColumn":16},{"ruleId":"202","replacedBy":"216"},{"ruleId":"204","replacedBy":"217"},{"ruleId":"206","severity":1,"message":"218","line":37,"column":9,"nodeType":"208","messageId":"209","endLine":37,"endColumn":23},{"ruleId":"206","severity":1,"message":"219","line":5,"column":26,"nodeType":"208","messageId":"209","endLine":5,"endColumn":36},{"ruleId":"206","severity":1,"message":"220","line":5,"column":38,"nodeType":"208","messageId":"209","endLine":5,"endColumn":49},{"ruleId":"206","severity":1,"message":"221","line":5,"column":51,"nodeType":"208","messageId":"209","endLine":5,"endColumn":60},{"ruleId":"206","severity":1,"message":"222","line":26,"column":9,"nodeType":"208","messageId":"209","endLine":26,"endColumn":23},{"ruleId":"202","replacedBy":"223"},{"ruleId":"204","replacedBy":"224"},{"ruleId":"202","replacedBy":"225"},{"ruleId":"204","replacedBy":"226"},{"ruleId":"202","replacedBy":"227"},{"ruleId":"204","replacedBy":"228"},{"ruleId":"206","severity":1,"message":"229","line":1,"column":34,"nodeType":"208","messageId":"209","endLine":1,"endColumn":43},{"ruleId":"206","severity":1,"message":"230","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"230","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"230","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"202","replacedBy":"231"},{"ruleId":"204","replacedBy":"232"},{"ruleId":"206","severity":1,"message":"233","line":24,"column":6,"nodeType":"208","messageId":"209","endLine":24,"endColumn":23},{"ruleId":"206","severity":1,"message":"234","line":33,"column":6,"nodeType":"208","messageId":"209","endLine":33,"endColumn":28},{"ruleId":"202","replacedBy":"235"},{"ruleId":"204","replacedBy":"236"},{"ruleId":"206","severity":1,"message":"237","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":9},{"ruleId":"202","replacedBy":"238"},{"ruleId":"204","replacedBy":"239"},{"ruleId":"202","replacedBy":"240"},{"ruleId":"204","replacedBy":"241"},{"ruleId":"206","severity":1,"message":"242","line":1,"column":9,"nodeType":"208","messageId":"209","endLine":1,"endColumn":17},{"ruleId":"206","severity":1,"message":"243","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"244","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":35,"column":14,"nodeType":"215","endLine":35,"endColumn":110},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"@typescript-eslint/no-unused-vars","'PropsType' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'Login' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["247"],["248"],"'newPostElement' is assigned a value but never used.","'DialogType' is defined but never used.","'MessageType' is defined but never used.","'StoreType' is defined but never used.","'newMessageBody' is assigned a value but never used.",["247"],["248"],["247"],["248"],["247"],["248"],"'StateType' is defined but never used.","'React' is defined but never used.",["247"],["248"],"'MapStatePropsType' is defined but never used.","'MapDispatchToPropsType' is defined but never used.",["247"],["248"],"'s' is defined but never used.",["247"],["248"],["247"],["248"],"'Dispatch' is defined but never used.","'authAPI' is defined but never used.","'stopSubmit' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]