[{"D:\\react\\02proect\\src\\index.tsx":"1","D:\\react\\02proect\\src\\reportWebVitals.ts":"2","D:\\react\\02proect\\src\\App.tsx":"3","D:\\react\\02proect\\src\\components\\Header\\Header.tsx":"4","D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx":"5","D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx":"10","D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"11","D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx":"12","D:\\react\\02proect\\src\\redux\\state.tsx":"13","D:\\react\\02proect\\src\\redux\\profile-reduser.tsx":"14","D:\\react\\02proect\\src\\redux\\dialogs-reduser.tsx":"15","D:\\react\\02proect\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"17","D:\\react\\02proect\\src\\StoreContext.tsx":"18","D:\\react\\02proect\\src\\redux\\redux-store.tsx":"19","D:\\react\\02proect\\src\\redux\\users-reduser.ts":"20","D:\\react\\02proect\\src\\components\\Users\\UsersContainer.tsx":"21","D:\\react\\02proect\\src\\components\\Users\\Users.tsx":"22","D:\\react\\02proect\\src\\components\\Profile\\ProfileContainer.tsx":"23","D:\\react\\02proect\\src\\components\\Header\\HeaderContainer.tsx":"24","D:\\react\\02proect\\src\\components\\Preloader.tsx":"25","D:\\react\\02proect\\src\\redux\\auth-reduser.ts":"26","D:\\react\\02proect\\src\\components\\Login\\Login.tsx":"27","D:\\react\\02proect\\src\\api\\api.ts":"28","D:\\react\\02proect\\src\\hoc\\withAuthRedirect.tsx":"29","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx":"30"},{"size":2002,"mtime":1616097707642,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1608541342413,"results":"33","hashOfConfig":"32"},{"size":1532,"mtime":1621194265976,"results":"34","hashOfConfig":"32"},{"size":7548,"mtime":1620152510053,"results":"35","hashOfConfig":"32"},{"size":798,"mtime":1620052406112,"results":"36","hashOfConfig":"32"},{"size":854,"mtime":1616097707633,"results":"37","hashOfConfig":"32"},{"size":1858,"mtime":1615636251115,"results":"38","hashOfConfig":"32"},{"size":428,"mtime":1616097707637,"results":"39","hashOfConfig":"32"},{"size":1995,"mtime":1622372145281,"results":"40","hashOfConfig":"32"},{"size":16526,"mtime":1622883431405,"results":"41","hashOfConfig":"32"},{"size":450,"mtime":1613655520183,"results":"42","hashOfConfig":"32"},{"size":266,"mtime":1613671414551,"results":"43","hashOfConfig":"32"},{"size":4701,"mtime":1614860906405,"results":"44","hashOfConfig":"45"},{"size":2928,"mtime":1621193255118,"results":"46","hashOfConfig":"32"},{"size":2442,"mtime":1616097707643,"results":"47","hashOfConfig":"32"},{"size":2434,"mtime":1622401124475,"results":"48","hashOfConfig":"32"},{"size":3110,"mtime":1615476207987,"results":"49","hashOfConfig":"32"},{"size":337,"mtime":1614940946770,"results":"50","hashOfConfig":"45"},{"size":1341,"mtime":1615819187212,"results":"51","hashOfConfig":"32"},{"size":6301,"mtime":1621186587285,"results":"52","hashOfConfig":"32"},{"size":4822,"mtime":1622401124459,"results":"53","hashOfConfig":"32"},{"size":2978,"mtime":1622401215186,"results":"54","hashOfConfig":"32"},{"size":2640,"mtime":1622834182437,"results":"55","hashOfConfig":"32"},{"size":1140,"mtime":1622367834778,"results":"56","hashOfConfig":"32"},{"size":243,"mtime":1616097707633,"results":"57","hashOfConfig":"32"},{"size":2375,"mtime":1622371411183,"results":"58","hashOfConfig":"32"},{"size":1196,"mtime":1623071720824,"results":"59","hashOfConfig":"32"},{"size":860,"mtime":1621191987635,"results":"60","hashOfConfig":"32"},{"size":840,"mtime":1622390197081,"results":"61","hashOfConfig":"32"},{"size":1199,"mtime":1623060185939,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"ay6f91",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1hmcuqe",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\02proect\\src\\index.tsx",[],["136","137"],"D:\\react\\02proect\\src\\reportWebVitals.ts",[],["138","139"],"D:\\react\\02proect\\src\\App.tsx",[],"D:\\react\\02proect\\src\\components\\Header\\Header.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx",[],["140","141"],"D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx",["142","143","144"],"import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport  {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n        <a>Music</a>\r\n    </div>\r\n        <div className={s.item}>\r\n            <a>Setting</a>\r\n        </div>\r\n    </nav>\r\n\r\n}\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["145","146"],"D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["147","148"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from \"../../../redux/state\";\r\n\r\n\r\nclass newPostText {\r\n}\r\n\r\nexport type MyPostsPropsType ={\r\n    posts: PostType[]\r\n    newPostText: string\r\n     addPost: () => void\r\n    updateNewPostText: (text: string)=> void\r\n}\r\n\r\nconst MyPosts = (props:MyPostsPropsType) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n    //ссылка ссьлающаяся на  элемент в textarea\r\n    //  let newPostElement = React.createRef();\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n        // let text = newPostElement.current.value;\r\n        // props.dispatch(addPostActionCreator())\r\n    }\r\n\r\n    const changeTextarea = () => {\r\n        // if (newPostElement.current) {\r\n\r\n        let text= newPostElement.current?.value;\r\n            props.updateNewPostText(text||\"\")\r\n            // let action = updateNewTextActionCreator(text)\r\n            // props.dispatch(action)\r\n\r\n\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3> my posts</h3>\r\n        <div>\r\n            <div>\r\n                <textarea ref={newPostElement} onChange={changeTextarea}\r\n                          value={props.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={props.addPost}>Add post</button>\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts;\r\n//\r\n// posts: PostType[]\r\n// changeText: (newPostText: string )=> void\r\n//     message: PostType[]\r\n// likesCount: PostType[]\r\n//  addPost: (text: newPostText) => void\r\n//    newPostText: string\r\n//\r\n//\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx",["149","150","151","152","153"],"D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx",["154"],"D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\react\\02proect\\src\\redux\\state.tsx",[],["155","156"],"D:\\react\\02proect\\src\\redux\\profile-reduser.tsx",[],["157","158"],"D:\\react\\02proect\\src\\redux\\dialogs-reduser.tsx",["159"],"import {DialogType, MessageType, StateType} from \"./state\";\r\nexport const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\r\n export const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\n type dialogsPageType  = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n    newMessageBody: string\r\n }\r\n let initialState :dialogsPageType = {\r\n    messages: [\r\n       {id: 1, message: 'Hi'},\r\n       {id: 2, message: 'How is your'},\r\n       {id: 3, message: 'Yo'},\r\n       {id: 4, message: 'Yo'},\r\n       {id: 5, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n       {id: 1, name: 'Dima'},\r\n       {id: 2, name: 'Andrey'},\r\n       {id: 3, name: 'Sveta'},\r\n       {id: 4, name: 'Sasha'},\r\n       {id: 5, name: 'Viktor'},\r\n       {id: 6, name: 'Valera'}\r\n    ],\r\n    newMessageBody: \"\"\r\n }\r\n\r\nexport  const dialogsReducer = (state= initialState, action: any): dialogsPageType => {\r\n\r\n\r\n\r\n   switch (action.type) {\r\n      case UPDATE_NEW_MESSAGE_BODY:\r\n         let stateCopy = {...state}\r\n         //поверхносная копия\r\n         stateCopy.newMessageBody = action.body;\r\n         //ретурним копи стэйт.если вернем стейт это будет тот что приходит в функцию и не будет перерисовки\r\n         return stateCopy;\r\n      case SEND_MESSAGE: {\r\n         let body = state.newMessageBody;\r\n         let stateCopy2 = {\r\n            ...state,\r\n            newMessageBody: '',\r\n            messages: [...state.messages,{id: 6, message: body}]}\r\n        //копируем месаджи и  пушим messages.push({id: 6, message: body}\r\n\r\n\r\n         return stateCopy2;\r\n     ///???????\r\n      }\r\n      default:\r\n         return state;//????????????\r\n   }\r\n}\r\nexport const sendMessageCreator = () => {\r\n   return{type: 'SEND-MESSAGE'} as const\r\n}\r\nexport const updateNewMessageBodyCreator = (body: string) => {\r\n   return {type: 'UPDATE-NEW-MESSAGE-BODY', body: body} as const\r\n}\r\n\r\n\r\n\r\n//  if(action.type === 'UPDATE-NEW-MESSAGE-BODY'){\r\n//       state.dialogsPage.newMessageBody = action.body;\r\n//\r\n//    }else if(action.type === 'SEND-MESSAGE'){\r\n//       let body = state.dialogsPage.newMessageBody;\r\n//       state.dialogsPage.newMessageBody = '';\r\n//       state.dialogsPage.messages.push({id: 6, message: body})\r\n//    }\r\n//\r\n//    return state;\r\n// }переделали в switch\r\n// stateCopy2.messages.push({id: 6, message: body});\r\n// export default dialogsReducer;","D:\\react\\02proect\\src\\components\\Dialogs\\DialogsContainer.tsx",["160"],"D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["161"],"import React from \"react\";\r\n\r\nimport {addPostActionCreator, updateNewTextActionCreator} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport  {StateType} from \"../../../redux/state\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state: StateType ) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst  mapDispatchToProps = (dispatch:  Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            let action = updateNewTextActionCreator(text)\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n//\r\n// posts: PostType[]\r\n// changeText: (newPostText: string )=> void\r\n//     message: PostType[]\r\n// likesCount: PostType[]\r\n//  addPost: (text: newPostText) => void\r\n//    newPostText: string\r\n// export type MyPostsPropsType = {\r\n//     store:  StoreType\r\n//     dispatch: (action: ActionsType)=> void\r\n//     updateNewPostText:  (text: string) => void\r\n//     newPost: string\r\n// }\r\n//\r\n// const MyPostsContainer = (props: MyPostsPropsType) => {\r\n//     // let postsElements =\r\n//     //     props.store._state.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n//     // //ссылка ссьлающаяся на  элемент в textarea\r\n//     // //  let newPostElement = React.createRef();\r\n//     // let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n//     //переносим в  <StoreContext.Consumer>\r\n// //let state = props.store.getState()\r\n// //     let addPost = () => {\r\n// //         // let text = newPostElement.current.value;\r\n// //         props.store.dispatch(addPostActionCreator())\r\n// //     }\r\n// //     let changeTextarea = (text: string) => {\r\n// //         // if (newPostElement.current) {\r\n// //         //     let text = newPostElement.current.value;\r\n// //             let action = updateNewTextActionCreator(text)\r\n// //             props.store.dispatch(action)\r\n// //     }\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().profilePage\r\n//\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator())\r\n//                 }\r\n//                 let changeTextarea = (text: string) => {\r\n//                     let action = updateNewTextActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//\r\n//                 return <MyPosts updateNewPostText= {changeTextarea}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>}\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\StoreContext.tsx",["162"],"D:\\react\\02proect\\src\\redux\\redux-store.tsx",[],"D:\\react\\02proect\\src\\redux\\users-reduser.ts",["163","164","165"],"import {Dispatch} from \"redux\";\r\nimport {userAPI} from \"../api/api\";\r\n\r\n\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS= 'SET_USERS';\r\nexport const SET_CURRENT_PAGE ='SET_CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT ='SET_TOTAL_USERS_COUNT';\r\nexport const TOGGLE_IS_FETCHING ='TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FETCHING_PROGRESS ='TOGGLE_IS_FETCHING_PROGRESS';\r\n\r\n export type UserType = {\r\n    id: number\r\n     photos: any\r\n     // photoUrl: any\r\n    followed: boolean\r\n    fullName:string\r\n    status:string\r\n    location: any\r\n\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nlet initialState: initialStateType  = {\r\n   users: [],\r\n    pageSize: 5,\r\n    totalUsersCount:0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n export const usersReducer = (state= initialState , action: any): initialStateType => {\r\n    switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n           ...state,\r\n           //делаем копию обьекта юзерс мапим если юзер ид ===action.userId(берем его из const followAC = (userId))\r\n           // возращаем копию обьекта ...u ( {id: 1,followed:false, fullName: \"Dima\",) и меняем значение followed на противоположное\r\n           //иначе возращаем не измененный обьект\r\n           users: state.users.map(u=>{\r\n              if(u.id=== action.userId){\r\n                 return {...u,followed: true}\r\n              }\r\n              return u;\r\n           })\r\n        }\r\n\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            //делаем копию обьекта юзерс мапим если юзер ид ===action.userId(берем его из const followAC = (userId))\r\n            // возращаем копию обьекта ...u ( {id: 1,followed:false, fullName: \"Dima\",) и меняем значение followed на противоположное\r\n            //иначе возращаем не измененный обьект\r\n            users: state.users.map(u=>{\r\n               if(u.id=== action.userId){\r\n                  return {...u,followed: false}\r\n               }\r\n               return u;\r\n            })\r\n         }\r\n      case SET_USERS: {\r\n          //делаем копию стейта,берем копию старых юзеров и добавляем к ним юзеров которые пришли из action.users\r\n          return {...state, users: action.users}\r\n      }\r\n        case SET_CURRENT_PAGE:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {...state,isFetching:action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FETCHING_PROGRESS :{\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n       default:\r\n          return state;\r\n    }\r\n }\r\nexport const followSuccess = (userId: number) => {\r\n   return{type: 'FOLLOW',userId} as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n   return {type: 'UNFOLLOW',userId} as const\r\n}\r\nexport const setUsers = (users: UserType[]) => {\r\n   return {type: 'SET_USERS',users} as const\r\n}\r\nexport const setCurrentPage = ( currentPage: number) =>{\r\n     return {type:  SET_CURRENT_PAGE,  currentPage: currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) =>{\r\n    return {type:  SET_TOTAL_USERS_COUNT, count:totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) =>{\r\n    return {type: TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId:number) =>{\r\n    return {type: TOGGLE_IS_FETCHING_PROGRESS, isFetching,userId} as const\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage: number,pageSize:number) => {\r\n     return(dispatch: Dispatch)=>{\r\n    dispatch (toggleIsFetching(true));\r\n    userAPI.getUsers(currentPage,pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    });\r\n     }\r\n}\r\n//thunk\r\nexport const follow = (userId: number) => {\r\n    return(dispatch: Dispatch)=>{\r\n        dispatch(toggleFollowingInProgress(true, userId))\r\n        userAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId))\r\n            });\r\n    }\r\n}\r\n//thunk\r\nexport const unfollow = (userId: number) => {\r\n    return(dispatch: Dispatch)=>{\r\n        dispatch(toggleFollowingInProgress(true, userId))\r\n        userAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId))\r\n            });\r\n    }\r\n}\r\n\r\n export default usersReducer;\r\n// {id: 1,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSujODEKwrdvmj6jufsQRsId0hv3Wr6vfppsA&usqp=CAU',\r\n//     followed:false, fullName: \"Dima\", status: \"Hello\",location:{city:\"Minsk\", country: \"Belarus\"}},\r\n// {id: 2,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNBR5SL43JjDN9N0r_q0FLWhi1WSTq1nDi_Q&usqp=CAU',\r\n//     followed:false, fullName: \"Eska\", status: \"Hello\",location:{city:\"Brest\", country: \"Belarus\"}},\r\n// {id: 3,photoUrl:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSI3DxknKrLBlFGLEtUQmCbc0adqoOYc0VLYQ&usqp=CAU',\r\n//     followed:true,fullName: \"Leonid\", status: \"Hello\",location:{city:\"Lida\", country: \"Belarus\"}}","D:\\react\\02proect\\src\\components\\Users\\UsersContainer.tsx",["166","167","168","169","170","171","172"],"D:\\react\\02proect\\src\\components\\Users\\Users.tsx",["173","174"],"D:\\react\\02proect\\src\\components\\Profile\\ProfileContainer.tsx",["175","176","177"],"D:\\react\\02proect\\src\\components\\Header\\HeaderContainer.tsx",["178"],"import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {SET_USER_DATA, getAuthUserData} from \"../../redux/auth-reduser\";\r\n\r\n\r\n\r\nexport type PropsType =  {\r\n    isAuth: boolean\r\n    login: string\r\n    getAuthUserData: () => void\r\n}\r\n\r\n\r\nclass HeaderContainer extends React.Component <PropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n// authAPI.me()\r\n//         // axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\r\n//         //     withCredentials: true\r\n//         // })\r\n//             .then(response => {\r\n//                 if(response.data.resultCode === 0) {\r\n//                     let {id, login, email} = response.data.data.login\r\n//                     this.props.setAuthUserData(id, login, email)\r\n//                 }\r\n//         });\r\n    }\r\n    render() {\r\n\r\n        return <Header {...this.props}/> //????????\r\n    }\r\n}\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["179","180"],"D:\\react\\02proect\\src\\components\\Preloader.tsx",["181"],"D:\\react\\02proect\\src\\redux\\auth-reduser.ts",[],"D:\\react\\02proect\\src\\components\\Login\\Login.tsx",[],"D:\\react\\02proect\\src\\api\\api.ts",[],"D:\\react\\02proect\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx",["182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"185","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":17,"column":13,"nodeType":"193","endLine":17,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":20,"column":9,"nodeType":"193","endLine":20,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":23,"column":13,"nodeType":"193","endLine":23,"endColumn":16},{"ruleId":"183","replacedBy":"194"},{"ruleId":"185","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":7,"column":7,"nodeType":"198","messageId":"199","endLine":7,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":24,"column":9,"nodeType":"198","messageId":"199","endLine":24,"endColumn":16},{"ruleId":"196","severity":1,"message":"201","line":5,"column":26,"nodeType":"198","messageId":"199","endLine":5,"endColumn":36},{"ruleId":"196","severity":1,"message":"202","line":5,"column":38,"nodeType":"198","messageId":"199","endLine":5,"endColumn":49},{"ruleId":"196","severity":1,"message":"203","line":5,"column":51,"nodeType":"198","messageId":"199","endLine":5,"endColumn":60},{"ruleId":"196","severity":1,"message":"204","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":27},{"ruleId":"196","severity":1,"message":"205","line":6,"column":29,"nodeType":"198","messageId":"199","endLine":6,"endColumn":56},{"ruleId":"206","severity":1,"message":"207","line":16,"column":13,"nodeType":"193","endLine":16,"endColumn":52},{"ruleId":"183","replacedBy":"208"},{"ruleId":"185","replacedBy":"209"},{"ruleId":"183","replacedBy":"210"},{"ruleId":"185","replacedBy":"211"},{"ruleId":"196","severity":1,"message":"212","line":1,"column":34,"nodeType":"198","messageId":"199","endLine":1,"endColumn":43},{"ruleId":"196","severity":1,"message":"213","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"213","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"213","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":90,"column":65,"nodeType":"216","messageId":"217","endLine":90,"endColumn":67},{"ruleId":"214","severity":1,"message":"218","line":136,"column":46,"nodeType":"216","messageId":"217","endLine":136,"endColumn":48},{"ruleId":"214","severity":1,"message":"218","line":149,"column":46,"nodeType":"216","messageId":"217","endLine":149,"endColumn":48},{"ruleId":"196","severity":1,"message":"219","line":2,"column":18,"nodeType":"198","messageId":"199","endLine":2,"endColumn":32},{"ruleId":"196","severity":1,"message":"220","line":5,"column":5,"nodeType":"198","messageId":"199","endLine":5,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":7,"column":5,"nodeType":"198","messageId":"199","endLine":7,"endColumn":23},{"ruleId":"196","severity":1,"message":"222","line":8,"column":5,"nodeType":"198","messageId":"199","endLine":8,"endColumn":13},{"ruleId":"196","severity":1,"message":"223","line":8,"column":42,"nodeType":"198","messageId":"199","endLine":8,"endColumn":58},{"ruleId":"196","severity":1,"message":"224","line":18,"column":6,"nodeType":"198","messageId":"199","endLine":18,"endColumn":23},{"ruleId":"196","severity":1,"message":"225","line":27,"column":6,"nodeType":"198","messageId":"199","endLine":27,"endColumn":28},{"ruleId":"226","severity":1,"message":"227","line":21,"column":5,"nodeType":"228","messageId":"229","endLine":85,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":44,"column":14,"nodeType":"193","endLine":44,"endColumn":103},{"ruleId":"196","severity":1,"message":"230","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"231","line":7,"column":9,"nodeType":"198","messageId":"199","endLine":7,"endColumn":17},{"ruleId":"196","severity":1,"message":"232","line":8,"column":9,"nodeType":"198","messageId":"199","endLine":8,"endColumn":25},{"ruleId":"196","severity":1,"message":"233","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":22},{"ruleId":"183","replacedBy":"234"},{"ruleId":"185","replacedBy":"235"},{"ruleId":"206","severity":1,"message":"207","line":5,"column":9,"nodeType":"193","endLine":5,"endColumn":31},{"ruleId":"196","severity":1,"message":"236","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":9},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],["237"],["238"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["237"],["238"],"@typescript-eslint/no-unused-vars","'newPostText' is defined but never used.","Identifier","unusedVar","'addPost' is assigned a value but never used.","'DialogType' is defined but never used.","'MessageType' is defined but never used.","'StoreType' is defined but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["237"],["238"],["237"],["238"],"'StateType' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'ConnectedProps' is defined but never used.","'initialStateType' is defined but never used.","'setTotalUsersCount' is defined but never used.","'setUsers' is defined but never used.","'toggleIsFetching' is defined but never used.","'MapStatePropsType' is defined but never used.","'MapDispatchToPropsType' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'axios' is defined but never used.","'Redirect' is defined but never used.","'WithAuthRedirect' is defined but never used.","'SET_USER_DATA' is defined but never used.",["237"],["238"],"'s' is defined but never used.","no-global-assign","no-unsafe-negation"]